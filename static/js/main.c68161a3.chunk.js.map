{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","itemPerPage","currentPage","onPageChange","pageList","Math","ceil","handlerPage","page","length","className","classNames","disabled","href","onClick","map","active","items","App","useState","setItemPerPage","setCurrentPage","slice","visibleList","setVisibleList","startItem","endItem","useEffect","newListItem","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAE3CM,EAAc,SAACC,GACfN,IAAgBM,GAAQA,GAAQ,GAAKA,GAAQJ,EAASK,QACxDN,EAAaK,IAIjB,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBV,IADZ,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,WACPP,EAAYL,EAAc,IAN9B,oBAYDE,EAASW,KAAI,SAAAP,GAAI,OAChB,oBAEEE,UAAWC,IAAW,YAAa,CACjCK,OAAQR,IAASN,IAHrB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAML,GACVM,QAAS,WACPX,EAAaK,IALjB,SAQGA,KAbEA,MAiBT,oBAAIE,UAAWC,IAAW,YAAa,CACrCC,SAAUV,IAAgBE,EAASK,SADrC,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAASK,OACxCK,QAAS,WACPP,EAAYL,EAAc,IAN9B,wBC3DFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KACA,EAAsCF,mBAASF,EAAMK,MAAM,EAAGrB,IAA9D,mBAAOsB,EAAP,KAAoBC,EAApB,KAEMxB,EAAQiB,EAAMR,OACdgB,EAAYvB,EAAcD,EAAcA,EAAc,EACtDyB,EAAUxB,EAAcD,GAAeD,EACzCE,EAAcD,EACdD,EAEJ2B,qBAAU,WACR,IAAMC,EAAcX,EAAMK,OACvBpB,EAAc,GAAKD,EACpBC,EAAcD,GAGhBuB,EAAeI,KACd,CAAC1B,EAAaD,IAMjB,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,4BAEOR,EAFP,sBAGauB,EAHb,cAG4BC,EAH5B,kBAIO1B,EAJP,QAOA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SAAU,SAACC,GACTZ,GAAgBY,EAAMC,OAAOH,OAC7BT,EAAe,IAPnB,UAUE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOA,EACPC,YAAaA,EACbC,YAAaA,EACbC,aA1Ca,SAACK,GAClBa,EAAeb,MA2Cb,6BACGe,EAAYR,KAAI,SAAAoB,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCzEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c68161a3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  itemPerPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemPerPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageList = getNumbers(1, Math.ceil(total / itemPerPage));\n\n  const handlerPage = (page: number) => {\n    if (currentPage !== page && page >= 1 && page <= pageList.length) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            handlerPage(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pageList.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item', {\n        disabled: currentPage === pageList.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageList.length}\n          onClick={() => {\n            handlerPage(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visibleList, setVisibleList] = useState(items.slice(0, itemPerPage));\n\n  const total = items.length;\n  const startItem = currentPage * itemPerPage - itemPerPage + 1;\n  const endItem = currentPage * itemPerPage <= total\n    ? currentPage * itemPerPage\n    : total;\n\n  useEffect(() => {\n    const newListItem = items.slice(\n      (currentPage - 1) * itemPerPage,\n      currentPage * itemPerPage,\n    );\n\n    setVisibleList(newListItem);\n  }, [currentPage, itemPerPage]);\n\n  const pageChenge = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {` ${currentPage} `}\n        {`(items ${startItem} - ${endItem} of`}\n        {` ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={(event) => {\n              setItemPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        itemPerPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={pageChenge}\n      />\n      <ul>\n        {visibleList.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}